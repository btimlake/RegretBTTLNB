function [winnings2x2, chosenGame, opponentChoice]=games2x2winnings(gamesdatafilename, cfg, window)

% enable all number keys depending on platform
if ismac
enabledKeys = RestrictKeysForKbCheck([30:39, 44, 79, 80, 81,82]); % add all number keys and Space
elseif isunix
    disp('Unix');
elseif ispc
    disp('PC');
    enabledKeys = RestrictKeysForKbCheck([37,38,39,40,32,48:57]); % add all number keys and Space PC
end

gamedata = dataset('File', gamesdatafilename, 'ReadVarNames', false, 'Delimiter', ' ');
 % convert ASCII file of user choices to usable dataset
load('matching_responsesDATASET');

% Select specific text font, style and size:
screenXpixels=cfg.screenSize.x;
    Screen('TextFont', window, 'Courier New');
    Screen('TextSize', window, cfg.fontSize);
    Screen('TextStyle', window);
    Screen('TextColor', window, cfg.textColor);
    
inputReq1 = 'Tasti il gioco scelto e premi ''Enter'': '; % ITALIAN
fail1='Si prega tastere un numero di gioco e premi ''Enter'': '; % ITALIAN
inputReq2 = 'Tasti la scelta del tuo avversario e premi ''Enter'': '; % ITALIAN
fail2='Si prega tastere 1 o 2 e premi ''Enter'': '; % ITALIAN
    
    [nx, ny, textRect1]=DrawFormattedText(window, inputReq1, 0, 0, cfg.bgColor); % draws a dummy version of text just to get measurements
    [nx, ny, textRect2]=DrawFormattedText(window, inputReq2, 0, ny, cfg.bgColor); % draws a dummy version of text just to get measurements
	textWidth1 = textRect1(3)-textRect1(1); % figures width of bounding rectangle of text
	textWidth2 = textRect2(3)-textRect2(1); % figures width of bounding rectangle of text
    xPos1 = cfg.screenCenter(1) - textWidth1/2; % sets x position half the text length back from center 
    xPos2 = cfg.screenCenter(1) - textWidth2/2; % sets x position half the text length back from center 
    yPos = cfg.screenCenter(2);
Screen('Flip', window)

%% Input chosen game in PTB

% May not work on Windows 7, MS Vista or non-US keyboard mappings
% inputReq1 = 'Tasti il gioco scelto e premi ''Enter'': '; % ITALIAN
% fail1='Si prega tastere un numero di gioco e premi ''Enter'': '; % ITALIAN
% fail1='Please enter a game number.'; % ENGLISH

aOK=0; % initial value for aOK

string = '';
output = [inputReq1, ' ', string];

while aOK ~= 1
    %     (~strcmp(keyName,'space'))
    
%     Screen('DrawFormattedText', window, inputReq1, xPos1, yPos, cfg.textColor);
%     Screen('Flip', window, 0, 1);
%     while true
%         char = GetChar;
%         
%         if isempty(char)
%             string = '';
%             break;
%         end
%         
%         switch (abs(char))
%             case 8
%                 % backspace
%                 if ~isempty(string)
%                     % Redraw text string, but with textColor == bgColor, so
%                     % that the old string gets completely erased:
%                     oldTextColor = Screen('TextColor', window);
%                     Screen('DrawFormattedText', window, output, xPos1, yPos, cfg.bgColor);
%                     Screen('TextColor', window, oldTextColor);
%                     
%                     % Remove last character from string:
%                     string = string(1:length(string)-1);
%                 end
%             otherwise
%                 string = [string, char]; %#ok<AGROW>
%         end
%         output = [msg, ' ', string];
%         Screen('DrawFormattedText', window, output, xPos1, yPos, cfg.textColor);
%         Screen('Flip', window, 0, 1);
%     end

    
    [chosenGame, OK] = str2num(GetEchoStringForm(window, inputReq1, xPos1, yPos, cfg.textColor)); % displays string in PTB; allows backspace
    
    % potential alternative
    % number = GetNumber([deviceIndex][, untilTime=inf][, optional KbCheck arguments...])
    
    % HOW TO GET THIS TO ALLOW REPEATED INPUT?
%     TRY BREAK OR RETURN
    % chosenGame = input('Enter the randomly selected game: ') % ENGLISH
    % chosenGame = input('Tasti il gioco scelto: ') % ITALIAN
    switch isempty(chosenGame)
        case 1 %deals with both cancel and X presses
            chosenGame = GetEchoStringForm(window, fail1, xPos1, yPos, [0 0 0], [255 255 255]); % displays string in PTB; allows backspace
        case 0
            if OK == 0
                aOK = 0;
                chosenGame = GetEchoStringForm(window, fail1, xPos1, yPos, [0 0 0], [255 255 255]); % displays string in PTB; allows backspace
            elseif chosenGame <= 1 || chosenGame >= 48
                aOK = 0;
                chosenGame = GetEchoStringForm(window, fail1, xPos1, yPos, [0 0 0], [255 255 255]); % displays string in PTB; allows backspace
            else
                aOK = 1;
            end
    end
end


%% KbWait

chosenTrial = gamedata.Var6 == chosenGame; % find the trial that contains the chosen game
matchedGame = find(matchingresponsesDATASET.column == chosenGame); % get the corresponding game from standard list
matchedTrial = gamedata.Var6 == matchedGame; % get the trial in which player did the matched game
% get the choice from the chosen game
chosenChoice = gamedata.Var5(chosenTrial);
matchedChoice = gamedata.Var5(matchedTrial);

if strcmp(chosenChoice, 'UpArrow') == 1
    numberChoice = 1;
elseif strcmp(chosenChoice, 'DownArrow') == 1 
    numberChoice = 2;
else
    disp('Something bad happened with chosenChoice')
end


    % report chosen choice


% get the choice from the matched game
% these numbers are flipped because of how the grids match up 
if strcmp(matchedChoice, 'UpArrow') == 1
    numberMatch = 2; % 
elseif strcmp(matchedChoice, 'DownArrow') == 1 
    numberMatch = 1;
else
    disp('Something bad happened with matchedChoice')
end

% report matched choice
% disp(numberMatch)

%% Input opponent choice
% opponentChoice = input('Enter your selected opponent''s choice and press ''Enter'': ') % ENGLISH
% inputReq2 = 'Tasti la scelta del tuo avversario e premi ''Enter'': '; % ITALIAN
% fail2='Si prega tastere 1 o 2 e premi ''Enter'': '; % ITALIAN
[opponentChoice, OK] = str2num(GetEchoStringForm(window, inputReq2, xPos2, yPos, cfg.textColor)); % displays string in PTB; allows backspace

% disp({'Enter your selected opponent''s choice.'}, {'And then tell them your reported choice.'})
% disp({'Tasti la scelta del tuo avversario.'},{'E poi, dica al avversario il tuo scelto.'})
% % enter opponent's choice for chosen game
% opponentChoice = user_input;

switch isempty(opponentChoice)
    case 1 %deals with both cancel and X presses 
        opponentChoice = GetEchoStringForm(window, fail2, xPos2, yPos, [0 0 0], [255 255 255]) % displays string in PTB; allows backspace

    case 0
        if OK == 0
        opponentChoice = GetEchoStringForm(window, fail2, xPos2, yPos, [0 0 0], [255 255 255]) % displays string in PTB; allows backspace            
        elseif opponentChoice == (1 || 2)
        opponentChoice=opponentChoice;
        else
        opponentChoice = GetEchoStringForm(window, fail2, xPos2, yPos, [0 0 0], [255 255 255]) % displays string in PTB; allows backspace
        end
        
end

% pairedOutcome = ['r_c' num2str(numberChoice) num2str(opponentChoice)];
% matchingresponsesDATASET.pairedOutcome(chosenTrial)

% compute result based on player's choice and opponent's choise
switch numberChoice
    case 1
        if opponentChoice == 1
            winnings2x2 = matchingresponsesDATASET.r_c11(chosenGame);
        else 
            winnings2x2 = matchingresponsesDATASET.r_c12(chosenGame);
        end
    case 2 
        if opponentChoice == 1
            winnings2x2 = matchingresponsesDATASET.r_c21(chosenGame);
        else 
            winnings2x2 = matchingresponsesDATASET.r_c22(chosenGame);
        end
end


%% report result (payout)
% payout2x2 = ['You won ' num2str(winnings2x2) '.']; %ENGLISH
payout2x2 = ['Hai vinto ' num2str(winnings2x2) '.']; %ITALIAN

    DrawFormattedText(window, payout2x2, 'center', 'center'); % Result text

    Screen('Flip', window)
    
    WaitSecs(4); 

% gamedata.3(chosenGame) = my_choiceVar6
% 
% disp(my_choice)
% 
% game.4(chosenGame) = matchedGame
% 
% game.matchedGame(chosenGame) = winnings2x2 



end


